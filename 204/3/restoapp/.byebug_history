continue
@restraunt.location.split(',')[1].delete(' ')
@restraunt.location.split(',')[1].delete('')
@restraunt.location.split(',')[0]
@restraunt.location.split(',')[1]
@restraunt.location.split(',')[0]
@restraunt.location.spli(',')[0]
@restraunt.location.spli(',')[2]
@restraunt.location[1]
@restraunt.location.split(',')[1]
@restraunt.location.split(',')
@restraunt.location.split(,)
@restraunt.location
@restraunt
@restraun
continue
@restraunt.avg_mark
continue
@restraunt.avg_mark
restraunt.avg_mark
continue
@restraunt
restraunt
continue
@restraunt.update(avg_mark: avg_mark.ids.reduce(:+))
avg_mark
@restraunt.update(avg_mark: avg_mark)
avg_mark.ids.reduce(:+)
avg_mark.ids
avg_mark.id
avg_mark
avg_mark.reduce.id
avg_mark
Rwlersri:prs[id)Rview.ll.whre(resruti:prm[i]
continue
Review.create!(id: review_id + 3, body: params[:body], mark: params[:mark], user_id: session[:user_id],restraunt_id: 43)
Review.create!(id: review_id + 2, body: params[:body], mark: params[:mark], user_id: session[:user_id],restraunt_id: 43)
review_id
Review.create!(id: review_id + 1, body: params[:body], mark: params[:mark], user_id: session[:user_id],restraunt_id: 43)
Review.create!(id: review_id, body: params[:body], mark: params[:mark], user_id: session[:user_id],restraunt_id: 44)
Review.create!(id: review_id, body: params[:body], mark: params[:mark], user_id: session[:user_id],restraunt_id: 43)
Review.create!(id: review_id, body: params[:body], mark: params[:mark], user_id: session[:user_id],restraunt_id: params[:id])
Review.create!(review_id,params[:body], params[:mark], session[:user_id],params[:id])
Review.create!(id: review_id, body: params[:body], mark: params[:mark], user_id: session[:user_id],restraunt_id: params[:id])
continue
params[:id]
continue
params[:id].to_i
params[:id]
continue
session
continue
session[:user_id] = 13
session
params[:id]
continue
restraunt
Review.create(id: 1, user_id:7, restraunt_id:42, body: 'sadd', mark: 5)
Review.all
review
Review.create(id: 1, user_id:7, restraunt_id:42, body: 'sadd', mark: 5)
Review.create(id: 1)
continue
Review.create(id: 1)
Review.new(id: 1)
Review.new
Review
params
restraunt
params
continue
session
user
@restraunt
restraunt
params
continue
params
continue
params[:body]
params
@restraunt
restraunt
session[:name].present?
session
xt
w
we
s
da
eitsda
ocsdl[asfns]loknkq
ntinnue
cniu
continue
session
continue
session
continue
session
session.clear
session
continue
session[:id].nil?
session[:name]
continue
session
continue
session
continue
session
continue
session[:name] = user.name
user.name
params[:name]
session
exit
session
session[:name] = 'name'
session[:name] = 'name]
session[:name] = name
session_start!
session[:name]
session
continue
session[:name]
continue
session[:name]
continue
session
continue
session
continue
session[:user_id]
session
continue
session
continue
session
continue
session
continue
session
continue
session[:user_id] = user.id
session
session[:session_id] = user.id
user = User.all.find_by(:email => params[:email])
 session[:session_id] = user.id
continue
session[:session_id]
session
continue
session[:session_id]
session[:id]
session
continue
BCrypt::Password.new(user.password) == params[:password]
BCrypt::Password.new(user.password) == params[:password].to_s
BCrypt::Password.new(user.password) == '33motina'
user.password == Password.new(params[:password])
user.password == params[:password]
BCrypt::Password.create(params[:password]).to_s
user.password == BCrypt::Password.create(params[:password]).to_s
user.password
BCrypt::Password(user.password)
BCrypt::Password.new(user.password)
BCrypt::Password.new(hash)
user = User.all.find_by(:email => params[:email])
c
continue
user.hash_password(params[:password])
exit
user.hash_password(params[:password])
user
user = User.all.find_by(:email => params[:email])
user
exit
xt
se & testpswr(aaaodrhs_adprm[pswr])f sr& s_asodprms[:password] sers_asodprm[pswr])ue
continue
user && test_password(params[:password], user.hash_password(params[:password]))
user && test_password(params[:password], user.hash_password(password))
user.id
user = User.all.find { |user| user.email == params[:email] }
user.id
User.all.find { |user| user.email == params[:email] }
user
params[:password]
params[:email]
continue
params[:email]
User.all.find_by(:email => params[:email])
User.all.find_by(:email :params[:email])
User.all.find_by(email: params[:email])
User.all.find_by(:email params[:email])
User.all.find_by
User.all.find { |user| user.email == params[:email] }
continue
params[:inputEmail]
params[:email]
params[:name]
User.all.find {|user| user.name == params[:username]}
User.all.find
User.all
User
user
continue
user = User.create!(id: 10, email: 'sdasd', name:'asdasd', password: 'asdad')
User.new(id: 10, email: 'sdasd', name:'asdasd', password: 'asdad')
User.new(10)
User(10)
User.create(10, 'asd', 'asdd', 'as@mail.ru')
User.create
User.new
continue
User.new
User.create(10, 'asd', 'asdd', 'as@mail.ru')
User.create
User.create(10, 'asd', 'asdd', 'as@mail.ru')
User.new(10, 'asd', 'asdd', 'as@mail.ru')
User.new(10, asd, asdd, as@mail.ru)
User.new
params[:email]
params[:name]
User.all.last.id + 1
user_id
User
continue
User.all.last.id
User.all.last
User.all
continue
params[:name]
continue
hash_password(params[:password])
params[:password]
params[:email]
params[:username]
User.new
User
continue
Restraunt.where(:restruant_id => params[:id])
Restraunt.all.where(:id => 42)
Restraunt.all.where
Restraunt.all
Review.all
traunt.where(:restruant_id => params[:id])
Restraunt.all.where(:id => 42)
Restraunt.all.where
Restraunt.all
Review.all
ere(:restruant_id => params[:id])
Restraunt.all.where(:id => 42)
Restraunt.all.where
Restraunt.all
